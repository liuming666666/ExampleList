{"version":3,"sources":["HeroControl.js"],"names":["cc","Class","extends","Component","properties","speed","v2","maxSpeed","gravity","drag","direction","jumpSpeed","onLoad","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","bind","onKeyReleased","node","collisionX","collisionY","prePosition","preStep","touchingNumber","onEnable","director","getCollisionManager","enabled","enabledDebugDraw","onDisable","keyCode","KEY","a","left","d","right","w","up","jumping","y","onCollisionEnter","other","self","color","Color","RED","otherAabb","world","aabb","otherPreAabb","preAabb","clone","selfAabb","selfPreAabb","x","Intersection","rectRect","xMax","parent","xMin","width","touchingX","yMax","yMin","height","touchingY","onCollisionStay","group","motion","getComponent","_movedDiff","onCollisionExit","WHITE","update","dt","Math","abs"],"mappings":"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","file":"HeroControl.js","sourceRoot":"../../../../../../assets/cases/collider/Platform","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed: cc.v2(0, 0),\n        maxSpeed: cc.v2(2000, 2000),\n        gravity: -1000,\n        drag: 1000,\n        direction: 0,\n        jumpSpeed: 300\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        //add keyboard input listener to call turnLeft and turnRight\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            onKeyPressed: this.onKeyPressed.bind(this),\n            onKeyReleased: this.onKeyReleased.bind(this),\n        }, this.node);\n\n        this.collisionX = 0;\n        this.collisionY = 0;\n\n        this.prePosition = cc.v2();\n        this.preStep = cc.v2();\n\n        this.touchingNumber = 0;\n    },\n\n    onEnable: function () {\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDebugDraw = true;\n    },\n\n    onDisable: function () {\n        cc.director.getCollisionManager().enabled = false;\n        cc.director.getCollisionManager().enabledDebugDraw = false;\n    },\n    \n    onKeyPressed: function (keyCode, event) {\n        switch(keyCode) {\n            case cc.KEY.a:\n            case cc.KEY.left:\n                this.direction = -1;\n                break;\n            case cc.KEY.d:\n            case cc.KEY.right:\n                this.direction = 1;\n                break;\n            case cc.KEY.w:\n            case cc.KEY.up:\n                if (!this.jumping) {\n                    this.jumping = true;\n                    this.speed.y = this.jumpSpeed;    \n                }\n                break;\n        }\n    },\n    \n    onKeyReleased: function (keyCode, event) {\n        switch(keyCode) {\n            case cc.KEY.a:\n            case cc.KEY.left:\n            case cc.KEY.d:\n            case cc.KEY.right:\n                this.direction = 0;\n                break;\n        }\n    },\n    \n    onCollisionEnter: function (other, self) {\n        this.node.color = cc.Color.RED;\n\n        this.touchingNumber ++;\n        \n        // 1st step \n        // get pre aabb, go back before collision\n        var otherAabb = other.world.aabb;\n        var otherPreAabb = other.world.preAabb.clone();\n\n        var selfAabb = self.world.aabb;\n        var selfPreAabb = self.world.preAabb.clone();\n\n        // 2nd step\n        // forward x-axis, check whether collision on x-axis\n        selfPreAabb.x = selfAabb.x;\n        otherPreAabb.x = otherAabb.x;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.speed.x < 0 && (selfPreAabb.xMax > otherPreAabb.xMax)) {\n                this.node.x = otherPreAabb.xMax - this.node.parent.x;\n                this.collisionX = -1;\n            }\n            else if (this.speed.x > 0 && (selfPreAabb.xMin < otherPreAabb.xMin)) {\n                this.node.x = otherPreAabb.xMin - selfPreAabb.width - this.node.parent.x;\n                this.collisionX = 1;\n            }\n\n            this.speed.x = 0;\n            other.touchingX = true;\n            return;\n        }\n\n        // 3rd step\n        // forward y-axis, check whether collision on y-axis\n        selfPreAabb.y = selfAabb.y;\n        otherPreAabb.y = otherAabb.y;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.speed.y < 0 && (selfPreAabb.yMax > otherPreAabb.yMax)) {\n                this.node.y = otherPreAabb.yMax - this.node.parent.y;\n                this.jumping = false;\n                this.collisionY = -1;\n            }\n            else if (this.speed.y > 0 && (selfPreAabb.yMin < otherPreAabb.yMin)) {\n                this.node.y = otherPreAabb.yMin - selfPreAabb.height - this.node.parent.y;\n                this.collisionY = 1;\n            }\n            \n            this.speed.y = 0;\n            other.touchingY = true;\n        }    \n        \n    },\n    \n    onCollisionStay: function (other, self) {\n        if (this.collisionY === -1) {\n            if (other.node.group === 'Platform') {\n                var motion = other.node.getComponent('PlatformMotion');\n                if (motion) {\n                    this.node.x += motion._movedDiff;\n                }\n            }\n\n            // this.node.y = other.world.aabb.yMax;\n\n            // var offset = cc.v2(other.world.aabb.x - other.world.preAabb.x, 0);\n            \n            // var temp = cc.affineTransformClone(self.world.transform);\n            // temp.tx = temp.ty = 0;\n            \n            // offset = cc.pointApplyAffineTransform(offset, temp);\n            // this.node.x += offset.x;\n        }\n    },\n    \n    onCollisionExit: function (other) {\n        this.touchingNumber --;\n        if (this.touchingNumber === 0) {\n            this.node.color = cc.Color.WHITE;\n        }\n\n        if (other.touchingX) {\n            this.collisionX = 0;\n            other.touchingX = false;\n        }\n        else if (other.touchingY) {\n            other.touchingY = false;\n            this.collisionY = 0;\n            this.jumping = true;\n        }\n    },\n    \n    update: function (dt) {\n        if (this.collisionY === 0) {\n            this.speed.y += this.gravity * dt;\n            if (Math.abs(this.speed.y) > this.maxSpeed.y) {\n                this.speed.y = this.speed.y > 0 ? this.maxSpeed.y : -this.maxSpeed.y;\n            }\n        }\n\n        if (this.direction === 0) {\n            if (this.speed.x > 0) {\n                this.speed.x -= this.drag * dt;\n                if (this.speed.x <= 0) this.speed.x = 0;\n            }\n            else if (this.speed.x < 0) {\n                this.speed.x += this.drag * dt;\n                if (this.speed.x >= 0) this.speed.x = 0;\n            }\n        }\n        else {\n            this.speed.x += (this.direction > 0 ? 1 : -1) * this.drag * dt;\n            if (Math.abs(this.speed.x) > this.maxSpeed.x) {\n                this.speed.x = this.speed.x > 0 ? this.maxSpeed.x : -this.maxSpeed.x;\n            }\n        }\n\n        if (this.speed.x * this.collisionX > 0) {\n            this.speed.x = 0;\n        }\n        \n        this.prePosition.x = this.node.x;\n        this.prePosition.y = this.node.y;\n\n        this.preStep.x = this.speed.x * dt;\n        this.preStep.y = this.speed.y * dt;\n        \n        this.node.x += this.speed.x * dt;\n        this.node.y += this.speed.y * dt;\n    },\n});\n"]}