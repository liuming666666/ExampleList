{"version":3,"sources":["AudioEngineControl.js"],"names":["cc","Class","extends","Component","properties","audio","url","AudioClip","default","label","type","Label","onLoad","maxNum","audioEngine","getMaxAudioInstance","audioPool","forEach","name","warn","update","i","length","id","state","getState","splice","string","play","push","stopAll","pauseAll","resumeAll"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO;AACHC,iBAAKN,GAAGO,SADL;AAEHC,qBAAS;AAFN,SADC;;AAMRC,eAAO;AACHC,kBAAMV,GAAGW,KADN;AAEHH,qBAAS;AAFN;AANC,KAHP;;AAeLI,YAAQ,kBAAY;AAChB,aAAKC,MAAL,GAAcb,GAAGc,WAAH,CAAeC,mBAAf,EAAd;AACA,aAAKC,SAAL,GAAiB,EAAjB;;AAEA;AACA,SAAC,WAAD,EAAc,YAAd,EAA4BC,OAA5B,CAAoC,UAAUC,IAAV,EAAgB;AAChD,gBAAI,CAAClB,GAAGc,WAAH,CAAeI,IAAf,CAAL,EAA2B;AACvBlB,mBAAGmB,IAAH,CAAQ,MAAMD,IAAN,GAAa,gBAArB;AACH;AACJ,SAJD;AAKH,KAzBI;;AA2BLE,YAAQ,kBAAY;AAChB,YAAI,CAAC,KAAKX,KAAV,EAAiB;AACjB,aAAK,IAAIY,IAAE,CAAX,EAAcA,IAAE,KAAKL,SAAL,CAAeM,MAA/B,EAAuCD,GAAvC,EAA4C;AACxC,gBAAIE,KAAK,KAAKP,SAAL,CAAeK,CAAf,CAAT;AACA,gBAAIG,QAAQxB,GAAGc,WAAH,CAAeW,QAAf,CAAwBF,EAAxB,CAAZ;AACA,gBAAIC,QAAQ,CAAZ,EAAe;AACX,qBAAKR,SAAL,CAAeU,MAAf,CAAsBL,CAAtB,EAAyB,CAAzB;AACAA;AACH;AACJ;AACD,aAAKZ,KAAL,CAAWkB,MAAX,GAAoB,eAAe,KAAKX,SAAL,CAAeM,MAA9B,GAAuC,KAAvC,GAA+C,KAAKT,MAAxE;AACH,KAtCI;;AAwCLe,UAAM,gBAAY;AACd,YAAI,CAAC,KAAKvB,KAAV,EAAiB;AACjB,YAAIkB,KAAKvB,GAAGc,WAAH,CAAec,IAAf,CAAoB,KAAKvB,KAAzB,EAAgC,KAAhC,EAAuC,CAAvC,CAAT;AACA,aAAKW,SAAL,CAAea,IAAf,CAAoBN,EAApB;AACH,KA5CI;;AA8CLO,aAAS,mBAAY;AACjB,YAAI,CAAC,KAAKzB,KAAV,EAAiB;AACjBL,WAAGc,WAAH,CAAegB,OAAf;AACH,KAjDI;;AAmDLC,cAAU,oBAAY;AAClB,YAAI,CAAC,KAAK1B,KAAV,EAAiB;AACjBL,WAAGc,WAAH,CAAeiB,QAAf;AACH,KAtDI;;AAwDLC,eAAW,qBAAY;AACnB,YAAI,CAAC,KAAK3B,KAAV,EAAiB;AACjBL,WAAGc,WAAH,CAAekB,SAAf;AACH;AA3DI,CAAT","file":"AudioEngineControl.js","sourceRoot":"../../../../../assets/cases/04_audio","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        audio: {\n            url: cc.AudioClip,\n            default: null\n        },\n        \n        label: {\n            type: cc.Label,\n            default: null\n        }\n    },\n\n    onLoad: function () {\n        this.maxNum = cc.audioEngine.getMaxAudioInstance();\n        this.audioPool = [];\n        \n        // check deprecated\n        ['playMusic', 'playEffect'].forEach(function (name) {\n            if (!cc.audioEngine[name]) {\n                cc.warn('.' + name + ' is not found!');\n            }\n        });\n    },\n\n    update: function () {\n        if (!this.label) return;\n        for (var i=0; i<this.audioPool.length; i++) {\n            var id = this.audioPool[i];\n            var state = cc.audioEngine.getState(id);\n            if (state < 0) {\n                this.audioPool.splice(i, 1);\n                i--;\n            }\n        }\n        this.label.string = 'Instance: ' + this.audioPool.length + ' / ' + this.maxNum;\n    },\n    \n    play: function () {\n        if (!this.audio) return;\n        var id = cc.audioEngine.play(this.audio, false, 1);\n        this.audioPool.push(id);\n    },\n    \n    stopAll: function () {\n        if (!this.audio) return;\n        cc.audioEngine.stopAll();\n    },\n    \n    pauseAll: function () {\n        if (!this.audio) return;\n        cc.audioEngine.pauseAll();\n    },\n    \n    resumeAll: function () {\n        if (!this.audio) return;\n        cc.audioEngine.resumeAll();\n    },\n});\n"]}