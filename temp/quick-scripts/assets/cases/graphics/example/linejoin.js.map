{"version":3,"sources":["linejoin.js"],"names":["LineJoin","cc","Graphics","LineCap","Class","extends","Component","properties","onLoad","director","setClearColor","Color","WHITE","graphics","getComponent","lineWidth","time","radius","draw","onDisable","BLACK","update","dt","clear","rx","Math","sin","ry","cos","lineCap","BUTT","lineJoin","BEVEL","drawLine","MITER","ROUND","SQUARE","x","y","moveTo","lineTo","stroke"],"mappings":";;;;;;AAAA,IAAIA,WAAWC,GAAGC,QAAH,CAAYF,QAA3B;AACA,IAAIG,UAAUF,GAAGC,QAAH,CAAYC,OAA1B;;AAEAF,GAAGG,KAAH,CAAS;AACLC,aAASJ,GAAGK,SADP;;AAGLC,gBAAY,EAHP;;AAML;AACAC,YAAQ,kBAAY;AAChB,YAAIP,GAAGQ,QAAH,CAAYC,aAAhB,EAA+B;AAC3BT,eAAGQ,QAAH,CAAYC,aAAZ,CAA2BT,GAAGU,KAAH,CAASC,KAApC;AACH;;AAED,aAAKC,QAAL,GAAgB,KAAKC,YAAL,CAAkBb,GAAGC,QAArB,CAAhB;AACA,aAAKW,QAAL,CAAcE,SAAd,GAA0B,EAA1B;;AAEA,aAAKC,IAAL,GAAY,CAAZ;AACA,aAAKC,MAAL,GAAc,GAAd;;AAEA,aAAKC,IAAL;AACH,KAnBI;;AAqBLC,eAAW,qBAAY;AACnB,YAAIlB,GAAGQ,QAAH,CAAYC,aAAhB,EAA+B;AAC3BT,eAAGQ,QAAH,CAAYC,aAAZ,CAA2BT,GAAGU,KAAH,CAASS,KAApC;AACH;AACJ,KAzBI;;AA2BL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,aAAKN,IAAL,IAAaM,KAAK,GAAlB;AACA,aAAKJ,IAAL;AACH,KA/BI;;AAiCLA,UAAM,gBAAY;AACd,YAAIL,WAAW,KAAKA,QAApB;AACAA,iBAASU,KAAT;;AAEA,YAAIC,KAAK,KAAKP,MAAL,GAAcQ,KAAKC,GAAL,CAAS,KAAKV,IAAd,CAAvB;AACA,YAAIW,KAAK,CAAC,KAAKV,MAAN,GAAeQ,KAAKG,GAAL,CAAS,KAAKZ,IAAd,CAAxB;;AAEA;AACAH,iBAASgB,OAAT,GAAmB1B,QAAQ2B,IAA3B;;AAEAjB,iBAASkB,QAAT,GAAoB/B,SAASgC,KAA7B;AACA,aAAKC,QAAL,CAAc,CAAC,GAAf,EAAoB,CAApB,EAAuBT,EAAvB,EAA2BG,EAA3B;;AAEAd,iBAASkB,QAAT,GAAoB/B,SAASkC,KAA7B;AACA,aAAKD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBT,EAApB,EAAwBG,EAAxB;;AAEAd,iBAASkB,QAAT,GAAoB/B,SAASmC,KAA7B;AACA,aAAKF,QAAL,CAAc,GAAd,EAAmB,CAAnB,EAAsBT,EAAtB,EAA0BG,EAA1B;;AAEA;AACAd,iBAASkB,QAAT,GAAoB/B,SAASkC,KAA7B;;AAEArB,iBAASgB,OAAT,GAAmB1B,QAAQ2B,IAA3B;AACA,aAAKG,QAAL,CAAc,CAAd,EAAiB,CAAC,GAAlB,EAAuBT,EAAvB,EAA2BG,EAA3B;;AAEAd,iBAASgB,OAAT,GAAmB1B,QAAQiC,MAA3B;AACA,aAAKH,QAAL,CAAc,CAAC,GAAf,EAAoB,CAAC,GAArB,EAA0BT,EAA1B,EAA8BG,EAA9B;;AAEAd,iBAASgB,OAAT,GAAmB1B,QAAQgC,KAA3B;AACA,aAAKF,QAAL,CAAc,GAAd,EAAmB,CAAC,GAApB,EAAyBT,EAAzB,EAA6BG,EAA7B;AACH,KA/DI;;AAiELM,cAAU,kBAAUI,CAAV,EAAaC,CAAb,EAAgBd,EAAhB,EAAoBG,EAApB,EAAwB;AAC9B,YAAId,WAAW,KAAKA,QAApB;;AAEAA,iBAAS0B,MAAT,CAAgBF,IAAIb,EAApB,EAAwBc,IAAIX,EAA5B;AACAd,iBAAS2B,MAAT,CAAgBH,CAAhB,EAAmBC,CAAnB;AACAzB,iBAAS2B,MAAT,CAAgBH,IAAIb,EAApB,EAAwBc,IAAIX,EAA5B;AACAd,iBAAS4B,MAAT;AACH;AAxEI,CAAT","file":"linejoin.js","sourceRoot":"../../../../../../assets/cases/graphics/example","sourcesContent":["let LineJoin = cc.Graphics.LineJoin;\nlet LineCap = cc.Graphics.LineCap;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if (cc.director.setClearColor) {\n            cc.director.setClearColor( cc.Color.WHITE );\n        }\n        \n        this.graphics = this.getComponent(cc.Graphics);\n        this.graphics.lineWidth = 20;\n        \n        this.time = 0;\n        this.radius = 100;\n\n        this.draw();\n    },\n\n    onDisable: function () {\n        if (cc.director.setClearColor) {\n            cc.director.setClearColor( cc.Color.BLACK );\n        }\n    },\n    \n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        this.time += dt * 0.5;\n        this.draw();\n    },\n\n    draw: function () {\n        let graphics = this.graphics;\n        graphics.clear();\n\n        let rx = this.radius * Math.sin(this.time);\n        let ry = -this.radius * Math.cos(this.time);\n\n        // line join\n        graphics.lineCap = LineCap.BUTT;\n\n        graphics.lineJoin = LineJoin.BEVEL;\n        this.drawLine(-200, 0, rx, ry);\n\n        graphics.lineJoin = LineJoin.MITER;\n        this.drawLine(0, 0, rx, ry);\n\n        graphics.lineJoin = LineJoin.ROUND;\n        this.drawLine(200, 0, rx, ry);\n\n        // line cap\n        graphics.lineJoin = LineJoin.MITER;\n\n        graphics.lineCap = LineCap.BUTT;\n        this.drawLine(0, -125, rx, ry);\n\n        graphics.lineCap = LineCap.SQUARE;\n        this.drawLine(-200, -125, rx, ry);\n\n        graphics.lineCap = LineCap.ROUND;\n        this.drawLine(200, -125, rx, ry);\n    },\n\n    drawLine: function (x, y, rx, ry) {\n        let graphics = this.graphics;\n\n        graphics.moveTo(x + rx, y + ry);\n        graphics.lineTo(x, y);\n        graphics.lineTo(x - rx, y + ry);\n        graphics.stroke();\n    }\n});\n"]}