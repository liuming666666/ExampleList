{"version":3,"sources":["TipsManager.js"],"names":["i18n","require","PlatformType","cc","Enum","None","Native","Native_Desktop","Mobile","Mobile_Android","Runtime","WebGl","Canvas","Native_Browser_Chrome","canvas","Class","extends","Component","properties","support","platform","default","Node","type","onLoad","_showTips","_checkNonSupport","showed","textKey","sys","isNative","WIN32","MACOS","t","isMobile","runtime","_renderType","game","RENDER_TYPE_CANVAS","_checkSupport","RENDER_TYPE_WEBGL","ANDROID","isBrowser","browserType","BROWSER_TYPE_CHROME","info","bg","node","getComponent","Sprite","enabled","content","getChildByName","Label"],"mappings":"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","file":"TipsManager.js","sourceRoot":"../../../../../assets/scripts/Global","sourcesContent":["//\n// 用于提示用户哪些范例不支持平台\n//\nconst i18n = require('i18n');\n\n// 平台检查\nvar PlatformType = cc.Enum({\n    None: 0,\n    Native: 1,\n    Native_Desktop: 2,\n\n    Mobile: 10,\n    Mobile_Android: 11,\n\n    Runtime: 20,\n\n    WebGl: 30,\n    Canvas: 31,\n\n    Native_Browser_Chrome: 100\n});\n\nvar canvas = null;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        support: false,\n        // 需要检测的平台\n        platform: {\n            default: PlatformType.Node,\n            type: PlatformType\n        }\n    },\n\n    onLoad () {\n        this._showTips();\n    },\n\n    _checkNonSupport () {\n        var showed = false, textKey = '';\n        switch (this.platform) {\n            case PlatformType.Native_Desktop:\n                showed = (cc.sys.isNative && (cc.sys.platform === cc.sys.WIN32 ||\n                          cc.sys.platform === cc.sys.MACOS));\n                textKey = i18n.t(\"example_case_nonsupport_native_desktop_tips\");\n                break;\n            case PlatformType.Mobile:\n                showed = cc.sys.isMobile;\n                textKey = i18n.t(\"example_case_nonsupport_mobile_tips\");\n                break;\n            case PlatformType.Runtime:\n                showed = cc.runtime;\n                textKey = i18n.t(\"example_case_nonsupport_runtime_tips\");\n                break;\n            case PlatformType.Canvas:\n                showed = cc._renderType === cc.game.RENDER_TYPE_CANVAS;\n                textKey = i18n.t(\"example_case_nonsupport_web_canvas_tips\");\n                break;\n        }\n        return {\n            showed: showed,\n            textKey: textKey\n        }\n    },\n\n    _checkSupport () {\n        var showed = false, textKey = '';\n        switch (this.platform) {\n            case PlatformType.Mobile:\n                showed = !cc.sys.isMobile || cc.runtime;\n                textKey = i18n.t(\"example_case_support_mobile_tips\");\n                break;\n            case PlatformType.WebGl:\n                showed = cc._renderType !== cc.game.RENDER_TYPE_WEBGL;\n                textKey = i18n.t(\"example_case_support_webGl_tips\");\n                break;\n            case PlatformType.Mobile_Android:\n                showed = !(cc.sys.isMobile && cc.sys.platform === cc.sys.ANDROID) || cc.runtime;\n                textKey = i18n.t(\"example_case_support_mobile_android_tips\");\n                break;\n            case PlatformType.Native_Browser_Chrome:\n                showed = !(!cc.sys.isMobile &&\n                            cc.sys.isBrowser &&\n                            cc.sys.browserType === cc.sys.BROWSER_TYPE_CHROME);\n                textKey = i18n.t(\"example_case_support_native_chrome_tips\");\n                break;\n        }\n        return {\n            showed: showed,\n            textKey: textKey\n        }\n    },\n\n    _showTips () {\n        if (this.platform === PlatformType.None) { return; }\n        var info = this.support ? this._checkSupport() : this._checkNonSupport();\n        var bg = this.node.getComponent(cc.Sprite);\n        bg.enabled = info.showed;\n        if (info.showed) {\n            var content = this.node.getChildByName('Content').getComponent(cc.Label);\n            content.textKey = info.textKey;\n        }\n    }\n});\n"]}