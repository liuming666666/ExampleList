{"version":3,"sources":["SceneList.js"],"names":["cc","Class","extends","Component","properties","itemPrefab","default","type","Prefab","initItemCount","scrollView","ScrollView","bufferZone","createItem","x","y","name","url","item","instantiate","itemComp","getComponent","label","string","node","addChild","init","menu","sceneList","itemList","updateTimer","updateInterval","lastContentPosY","initList","scenes","game","_sceneInfos","dict","i","j","length","dirname","path","replace","scenename","basename","log","dirs","Object","keys","sort","push","scenenames","height","itemInfo","updateItem","getPositionInView","worldPos","parent","convertToWorldSpaceAR","position","viewPos","convertToNodeSpaceAR","update","dt","items","buffer","isDown","curItemCount","offset","itemNode","newIdx","index","newInfo"],"mappings":"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","file":"SceneList.js","sourceRoot":"../../../../../assets/scripts/Global","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        itemPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        initItemCount: 0,\n        scrollView: cc.ScrollView,\n        bufferZone: 0, // when item is away from bufferZone, we relocate it\n    },\n\n    createItem: function (x, y, name, url) {\n        var item = cc.instantiate(this.itemPrefab);\n        var itemComp = item.getComponent('ListItem');\n        var label = itemComp.label;\n        label.string = name;\n\n        if (url) {\n            itemComp.url = url;\n        }\n\n        // item.width = w;\n        item.x = x;\n        item.y = y;\n        this.node.addChild(item);\n        return item;\n    },\n\n    init (menu) {\n        this.menu = menu;\n        this.sceneList = [];\n        this.itemList = [];\n        this.updateTimer = 0;\n        this.updateInterval = 0.2;\n        this.lastContentPosY = 0; // use this variable to detect if we are scrolling up or down\n        this.initList();\n    },\n\n    // use this for initialization\n    initList () {\n        var scenes = cc.game._sceneInfos;\n        var dict = {};\n\n        if (scenes) {\n            var i, j;\n            for (i = 0; i < scenes.length; ++i) {\n                let url = scenes[i].url;\n                let dirname = cc.path.dirname(url).replace('db://assets/cases/', '');\n                if (dirname === 'db://assets/resources/test assets') {\n                    continue;\n                }\n                let scenename = cc.path.basename(url, '.fire');\n                if (scenename === 'TestList') continue;\n\n                if (!dirname) dirname = '_root';\n                if (!dict[dirname]) {\n                    dict[dirname] = {};\n                }\n                dict[dirname][scenename] = url;\n            }\n\n        } else {\n            cc.log('failed to get scene list!');\n        }\n        // compile scene dict to an array\n        let dirs = Object.keys(dict);\n        dirs.sort();\n        for (let i = 0; i < dirs.length; ++i) {\n            this.sceneList.push({\n                name: dirs[i],\n                url: null\n            });\n            let scenenames = Object.keys(dict[dirs[i]]);\n            scenenames.sort();\n            for (let j = 0; j < scenenames.length; ++j) {\n                let name = scenenames[j];\n                this.sceneList.push({\n                    name: name,\n                    url: dict[dirs[i]][name]\n                });\n            }\n        }\n        let y = 0;\n        this.node.height = (this.sceneList.length + 1) * 50;\n        for (let i = 0; i < this.initItemCount; ++i) {\n            let item = cc.instantiate(this.itemPrefab).getComponent('ListItem');\n            let itemInfo = this.sceneList[i];\n            item.init(this.menu);\n            this.node.addChild(item.node);\n            y -= 50;\n            item.updateItem (i, y, itemInfo.name, itemInfo.url);\n            this.itemList.push(item);\n        }\n    },\n\n    getPositionInView: function (item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    },\n\n    update (dt) {\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) {\n            return; // we don't need to do the math every frame\n        }\n        this.updateTimer = 0;\n        let items = this.itemList;\n        let buffer = this.bufferZone;\n        let isDown = this.node.y < this.lastContentPosY; // scrolling direction\n        let curItemCount = this.itemList.length;\n        let offset = 50 * curItemCount;\n        for (let i = 0; i < curItemCount; ++i) {\n            let item = items[i];\n            let itemNode = item.node;\n            let viewPos = this.getPositionInView(itemNode);\n            if (isDown) {\n                // if away from buffer zone and not reaching top of content\n                if (viewPos.y < -buffer && itemNode.y + offset < 0) {\n                    let newIdx = item.index - curItemCount;\n                    let newInfo = this.sceneList[newIdx];\n                    item.updateItem(newIdx, itemNode.y + offset, newInfo.name, newInfo.url );\n                }\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (viewPos.y > buffer && itemNode.y - offset > -this.node.height) {\n                    let newIdx = item.index + curItemCount;\n                    let newInfo = this.sceneList[newIdx];\n                    item.updateItem(newIdx, itemNode.y - offset, newInfo.name, newInfo.url);\n                }\n            }\n        }\n        // update lastContentPosY\n        this.lastContentPosY = this.node.y;\n    },\n});\n"]}